name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  APP_NAME: "github-actions-playground"

jobs:
  create-release:
    name: Create release

    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}

    steps:
      - id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and upload to release

    needs: create-release

    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    env:
      APP_EXTENSION: ${{ contains(matrix.os, 'windows') && '.exe' || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Zip binary
        run: zip ${{ env.APP_NAME }}-${{ matrix.target }}.zip target/${{ matrix.target }}/release/${{ env.APP_NAME }}${{ env.APP_EXTENSION }}

      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}-${{ matrix.target }}.zip
          asset_name: ${{ env.APP_NAME }}-${{ matrix.target }}.zip
          asset_content_type: application/zip